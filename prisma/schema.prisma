generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id              String           @id @default(uuid())
  username        String           @unique
  email           String           @unique
  name            String
  password        String
  createdAt       DateTime         @default(now())
  emailCode       String?
  emailVerified   Boolean          @default(false)
  profilePicture  String?
  websites        Website[]
  verifiedDevices VerifiedDevice[]
}

model Website {
  id             String      @id @default(uuid())
  url            String // The allowed website URL
  name           String? // Optional name for the website
  userId         String
  type           String // The type of website (e.g., "shopify", "wordpress", "other")
  createdAt      DateTime    @default(now())
  renewsOn       DateTime // Monthly subscription renewal date
  plan           String // Subscription plan type
  stripeId       String      @unique // Stripe subscription ID
  active         Boolean     @default(true)
  syncFrequency  String      @default("daily") // daily, weekly, monthly
  lastSyncedAt   DateTime?
  monthlyQueries Int         @default(0)
  accessKeys     AccessKey[]
  user           User        @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

model AccessKey {
  id        String   @id @default(uuid())
  name      String?
  key       String   @unique
  websiteId String
  createdAt DateTime @default(now())
  website   Website  @relation(fields: [websiteId], references: [id], onDelete: Cascade)

  @@index([websiteId])
}

model VerifiedDevice {
  id        String   @id @default(cuid())
  deviceId  String
  userId    String
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}
